<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coreteam.okr.dao.PlanDAO">
    <resultMap id="BaseResultMap" type="com.coreteam.okr.entity.Plan">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="organization_id" jdbcType="BIGINT" property="organizationId"/>
        <result column="team_id" jdbcType="BIGINT" property="teamId"/>
        <result column="owner_id" jdbcType="BIGINT" property="ownerId"/>
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName"/>
        <result column="is_privated" jdbcType="TINYINT" property="isPrivated"/>
        <result column="due_date" jdbcType="TIMESTAMP" property="dueDate"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt"/>
        <result column="is_deleted" jdbcType="TINYINT" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `desc`, `level`, organization_id, team_id, owner_id, owner_name, is_privated,
        due_date, created_at, updated_at, deleted_at, is_deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan
        where id = #{id,jdbcType=BIGINT}
        and is_deleted=0
    </select>

    <select id="getPlanConbineComemntNumById" parameterType="java.lang.Long" resultType="com.coreteam.okr.dto.plan.PlanWithCommentNumDTO">
        select
        id, `desc`, owner_id as ownerId, owner_name as ownerName , is_privated as isPrivated,
        due_date as dueDate,
        (select count(*) from plan_comment where plan_id = #{id,jdbcType=BIGINT} and is_deleted=0) as commentNums
        from plan
        where id = #{id,jdbcType=BIGINT}
        and is_deleted=0
    </select>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
        update plan
        set is_deleted = 1, deleted_at = now()
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="insert" parameterType="com.coreteam.okr.entity.Plan">
        insert into plan (id, `desc`, `level`,
        organization_id, team_id, owner_id,
        owner_name, is_privated, due_date,
        created_at, updated_at, deleted_at,
        is_deleted)
        values (#{id,jdbcType=BIGINT}, #{desc,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
        #{organizationId,jdbcType=BIGINT}, #{teamId,jdbcType=BIGINT}, #{ownerId,jdbcType=BIGINT},
        #{ownerName,jdbcType=VARCHAR}, #{isPrivated,jdbcType=TINYINT}, #{dueDate,jdbcType=TIMESTAMP},
        #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP},
        #{deleted,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.coreteam.okr.entity.Plan" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        insert into plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="level != null">
                `level`,
            </if>
            <if test="organizationId != null">
                organization_id,
            </if>
            <if test="teamId != null">
                team_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="ownerName != null">
                owner_name,
            </if>
            <if test="isPrivated != null">
                is_privated,
            </if>
            <if test="dueDate != null">
                due_date,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
            <if test="deleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=VARCHAR},
            </if>
            <if test="organizationId != null">
                #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="teamId != null">
                #{teamId,jdbcType=BIGINT},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="ownerName != null">
                #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="isPrivated != null">
                #{isPrivated,jdbcType=TINYINT},
            </if>
            <if test="dueDate != null">
                #{dueDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.coreteam.okr.entity.Plan">
        update plan
        <set>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                `level` = #{level,jdbcType=VARCHAR},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="teamId != null">
                team_id = #{teamId,jdbcType=BIGINT},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="ownerName != null">
                owner_name = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="isPrivated != null">
                is_privated = #{isPrivated,jdbcType=TINYINT},
            </if>
            <if test="dueDate != null">
                due_date = #{dueDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateOwnerName">
        update plan
        set owner_name = #{userName,jdbcType=VARCHAR}
        where owner_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.coreteam.okr.entity.Plan">
        update plan
        set `desc` = #{desc,jdbcType=VARCHAR},
        `level` = #{level,jdbcType=VARCHAR},
        organization_id = #{organizationId,jdbcType=BIGINT},
        team_id = #{teamId,jdbcType=BIGINT},
        owner_id = #{ownerId,jdbcType=BIGINT},
        owner_name = #{ownerName,jdbcType=VARCHAR},
        is_privated = #{isPrivated,jdbcType=TINYINT},
        due_date = #{dueDate,jdbcType=TIMESTAMP},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
        is_deleted = #{deleted,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>